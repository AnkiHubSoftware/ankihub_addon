name: tests
env:
  COMPOSE_DOCKER_CLI_BUILD: 1
  COMPOSE_FILE: ${{ github.workspace }}/ankihub_web/local.yml

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Checkout ankihub_addon
        uses: actions/checkout@v3

      - name: Get pip cache dir
        id: pip-cache
        run: |
          python -m pip install --upgrade pip
          echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pip-cache.outputs.dir }}
            ~/.cache/pre-commit
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev.txt', '**/base.txt', '.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: "5.15.2"
          setup-python: "false"

      - name: Install deps
        run: |
          python -m pip install -r ./requirements/dev.txt
          python -m pip install smokeshow

      - name: Build
        run: |
          python ./scripts/build.py
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Enable cloning web app repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.ANKIHUB_SSH_PRIVATE_KEY }}

      - name: Checkout ankipalace/ankihub web app repo
        uses: actions/checkout@v3
        with:
          repository: ankipalace/ankihub
          ref: dev
          path: ankihub_web

      - name: Set up AnkiHub env
        run: |
          mv ${{ github.workspace }}/ankihub_web/.env.dev ${{ github.workspace }}/ankihub_web/.env
          echo DEPLOYMENT_ENVIRONMENT=local >> ${{ github.workspace }}/ankihub_web/.env

      - run: docker-compose pull
      - run: echo "WEEK=$(date +%U)" >> $GITHUB_ENV
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
        with:
          key: ${{ github.workflow }}-${{ env.WEEK }}-{hash}
          restore-keys: |
            ${{ github.workflow }}-${{ env.WEEK }}-
      - run: |
          docker-compose build
          docker-compose run --rm django \
                python manage.py makemigrations && \
                django bash release.sh && \
                django python manage.py print_settings
          docker-compose up -d

      - name: Run pytest with coverage
        run: |
          pytest ./tests/client --disable-vcr --cov --cov-report=xml --cov-append -rA --show-capture=stdout -k change_note_suggestion
          coverage html

      - name: Upload coverage report with smokeshow
        run: smokeshow upload coverage_html_report
        env:
          SMOKESHOW_GITHUB_STATUS_DESCRIPTION: Add-on Test Coverage {coverage-percentage}
          SMOKESHOW_GITHUB_COVERAGE_THRESHOLD: 66
          SMOKESHOW_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SMOKESHOW_GITHUB_PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}

      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: false

      - name: Create ankiaddon file
        run: |
          bash ./scripts/release.sh
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Archive .ankiaddon
        uses: actions/upload-artifact@v3
        with:
          name: ankihub_addon_${{ github.sha }}
          path: ankihub.ankiaddon

      - name: Clean up docker images
        run: docker image prune --all --force --filter "until=168h"
        if: always()
