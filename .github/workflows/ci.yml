name: tests
env:
  COMPOSE_DOCKER_CLI_BUILD: 1
  WEBAPP_COMPOSE_FILE: ${{ github.workspace }}/ankihub_web/compose.yml
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  QTWEBENGINE_CHROMIUM_FLAGS: --no-sandbox
  DISABLE_QT5_COMPAT: 1

on:
  push:
    branches:
      - "main"
  pull_request:

jobs:

  test-client:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group: [1, 2]
    timeout-minutes: 30
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Checkout ankihub_addon
        uses: actions/checkout@v3

      - name: Setup addon
        uses: ./.github/actions/setup-addon
        with:
          google_api_key: ${{ secrets.GOOGLE_API_KEY }}
          install_qt: false

      - name: Enable cloning web app repo
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.ANKIHUB_SSH_PRIVATE_KEY }}

      - name: Checkout ankipalace/ankihub web app repo
        uses: actions/checkout@v3
        with:
          repository: ankipalace/ankihub
          ref: dev
          path: ankihub_web

      - name: Set up AnkiHub env
        run: |
          mv ${{ github.workspace }}/ankihub_web/.env.dev ${{ github.workspace }}/ankihub_web/.env

      - uses: taiki-e/install-action@just

      - name: Setup AnkiHub
        working-directory: ${{ github.workspace }}/ankihub_web
        run: |
          just pull-all-images
          docker compose run --rm django bash release.sh
          just up

      - name: Run pytest with coverage
        run: |
          pytest ./tests/client --disable-vcr --cov --cov-report=xml \
            --splits 2 --group ${{ matrix.group }} --durations-path=tests/.test_durations -k DailyCard

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage_client_${{ matrix.group }}
          path: .coverage
          include-hidden-files: true
