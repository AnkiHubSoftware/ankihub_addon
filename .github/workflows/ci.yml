name: tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  read-current-anki-matrix:
    # Reads current Anki set-up from anki-current.json
    runs-on: macos-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    - name: Checkout ankihub_addon
      uses: actions/checkout@v2
    - id: set-matrix
      run: |
        content=$(cat ./anki-current.json)
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/'%0A'}"
        content="${content//$'\r'/'%0D'}"
        content="{ \"include\": [ ${content} ] }"
        echo "::set-output name=matrix::$content"

  test-current-anki:
    needs: read-current-anki-matrix
    runs-on: ubuntu-latest

    strategy:
      matrix: ${{ fromJSON(needs.read-current-anki-matrix.outputs.matrix) }}

    steps:
      - name: Checkout ankihub_addon
        uses: actions/checkout@v2

      - name: Set up test environment
        uses: ./.github/actions/setup
        with:
          python: ${{ matrix.python }}
          chrome: ${{ matrix.chrome }}
          anki: ${{ matrix.anki }}
          pyqt: ${{ matrix.pyqt }}
          pyqtwebengine: ${{ matrix.pyqtwebengine }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ./requirements/dev.txt

      - name: Run tests
        run: pytest --cov --cov-report=xml
        env:
          SKIP_INIT: 1

      - name: Run tests forked
        run: pytest --forked --cov --cov-report=xml
        env:
          SKIP_INIT: 1

      - name: Upload coverage to Codecov
        env:
         CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      - name: Run pre-commit
        run: pre-commit run --all-files
